[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "call_assist"
version = "0.1.0"
description = "Call Assist system for Home Assistant with broker and plugins"
authors = [
    {name = "Call Assist Team"}
]
dependencies = [
    "betterproto[compiler]==2.0.0b7",
    "grpcio>=1.72.1",
    "grpcio-tools>=1.72.1",
    "pyyaml>=6.0.2",
    "dacite>=1.9.2",
    "dataclasses_jsonschema>=2.16.0",
    "pydantic>=2.0.0",
    "fastapi[standard]>=0.104.0",
    "uvicorn>=0.24.0",
    "ludic[fastapi] @ git+https://github.com/shocklateboy92/ludic@fixes/role-attr",
    "httpx>=0.24.0",
    "aiofiles>=23.0.0",
    "jinja2>=3.1.0",
]
requires-python = ">=3.13"

[project.optional-dependencies]
test = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-mock>=3.14.1",
    "aioresponses>=0.7.4",
    "grpclib>=0.4.7",
    "httpx>=0.24.0",
    "sqlmodel>=0.0.14",
    "beautifulsoup4>=4.12.2",
]
dev = [
    "ruff>=0.8.0",
]
integration = [
    "pytest-homeassistant-custom-component @ git+https://github.com/shocklateboy92/pytest-homeassistant-custom-component@fixes/opt-socket",
    "homeassistant>=2025.6.1",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["proto_gen*", "addon*", "integration*"]

[project.scripts]
call-assist-broker = "addon.broker.main:main"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict = true

[[tool.mypy.overrides]]
module = [
    "pytest_homeassistant_custom_component.*",
    "dataclasses_jsonschema.*",
    "dacite.*",
    "betterproto.*",
    "grpclib.*",
    "ludic.*",
    "config.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["integration.proto_gen.*", "proto_gen.*"]
ignore_errors = true
disable_error_code = [
    "attr-defined",
    "no-untyped-def",
    "no-untyped-call",
    "type-arg",
    "no-any-return"
]

[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "BLE",  # flake8-blind-except (prevents catching Exception/BaseException)
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
]

ignore = [
    "E501",   # line too long (handled by formatter)
    "T201",   # print found (allow prints in scripts)
    "ARG002", # unused method argument (common in event handlers)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["ARG001", "ARG002"]  # Allow unused args in tests
"**/__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.pytest.ini_options]
testpaths = ["tests", "addon/broker/tests", "integration/tests"]
asyncio_mode = "auto"
asyncio_default_test_loop_scope = "function"
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
