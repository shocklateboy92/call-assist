syntax = "proto3";

package callassist.broker;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "common.proto";

// Service for communication between Home Assistant Integration and Broker
// Implemented by the Broker - Home Assistant calls these methods
service BrokerIntegration {
  // HA Entity streaming - HA pushes its camera/media_player entities to broker
  rpc StreamHAEntities(stream HAEntityUpdate) returns (google.protobuf.Empty);
  
  // Broker entity streaming - broker pushes call stations and other entities to HA
  rpc StreamBrokerEntities(google.protobuf.Empty) returns (stream BrokerEntityUpdate);
  
  // Call operations
  rpc StartCall(StartCallRequest) returns (StartCallResponse);
  
  // Health check for connection monitoring
  rpc HealthCheck(google.protobuf.Empty) returns (HealthCheckResponse);
}

// Messages for HA Entity streaming (HA -> Broker)
message HAEntityUpdate {
  string entity_id = 1;
  string domain = 2;              // "camera" or "media_player"
  string name = 3;                // Friendly name
  string state = 4;               // Current state
  map<string, string> attributes = 5; // All entity attributes
  bool available = 6;             // Whether entity is available
  google.protobuf.Timestamp last_updated = 7;
}

// Messages for Broker Entity streaming (Broker -> HA)
message BrokerEntityUpdate {
  string entity_id = 1;           // Unique identifier
  string name = 2;                // Display name
  BrokerEntityType entity_type = 3; // Type of entity
  string state = 4;               // Current state
  map<string, string> attributes = 5; // Additional attributes
  string icon = 6;                // MDI icon name
  bool available = 7;             // Whether entity is available
  repeated string capabilities = 8; // What actions this entity supports
  google.protobuf.Timestamp last_updated = 9;
}

enum BrokerEntityType {
  BROKER_ENTITY_TYPE_UNKNOWN = 0;
  BROKER_ENTITY_TYPE_CALL_STATION = 1;   // Camera + Media Player combo
  BROKER_ENTITY_TYPE_CONTACT = 2;        // A callable contact
  BROKER_ENTITY_TYPE_PLUGIN_STATUS = 3;  // Status of a protocol plugin
  BROKER_ENTITY_TYPE_BROKER_STATUS = 4;  // Overall broker status
}

// Health check response
message HealthCheckResponse {
  bool healthy = 1;
  string message = 2;
  google.protobuf.Timestamp timestamp = 3;
}

// Call operations
message StartCallRequest {
  string call_station_id = 1;    // ID of the call station to use
  string contact = 2;            // Contact to call (string for now, will be selector later)
}

message StartCallResponse {
  bool success = 1;
  string message = 2;
  string call_id = 3;            // Unique call ID for tracking
}

